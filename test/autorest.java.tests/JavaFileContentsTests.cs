using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace AutoRest.Java.DanModel
{
    [TestClass]
    public class JavaFileContentsTests
    {
        [TestMethod]
        public void Constructor()
        {
            JavaFileContents contents = new JavaFileContents();
            JavaFileContentsAssert.AreEqual("", contents);
        }

        [TestMethod]
        public void TextWithNull()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text(null);
            JavaFileContentsAssert.AreEqual("", contents);
        }

        [TestMethod]
        public void TextWithEmpty()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text("");
            JavaFileContentsAssert.AreEqual("", contents);
        }

        [TestMethod]
        public void TextWithWhitespace()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text("   ");
            JavaFileContentsAssert.AreEqual("   ", contents);
        }

        [TestMethod]
        public void TextWithLetters()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text("abc");
            JavaFileContentsAssert.AreEqual("abc", contents);
        }

        [TestMethod]
        public void TextWithNewLine()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text("\n");
            JavaFileContentsAssert.AreEqual("\n", contents);
        }

        [TestMethod]
        public void TextWithCarriageReturnNewLine()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text("\r\n");
            JavaFileContentsAssert.AreEqual("\r\n", contents);
        }

        [TestMethod]
        public void TextWithLettersAndNewLines()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.Text("a\nbc\r\nd\nef");
            JavaFileContentsAssert.AreEqual("a\nbc\r\nd\nef", contents);
        }

        [TestMethod]
        public void TextWithWordWrapAndLargeTextWithNoWhitespace()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.SetWordWrapWidth(5);
            contents.Text("12345678901234567890");
            JavaFileContentsAssert.AreEqual("12345678901234567890", contents);
        }

        [TestMethod]
        public void TextWithWordWrapAndTextWithSpaces()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.SetWordWrapWidth(5);
            contents.Text("1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0");
            JavaFileContentsAssert.AreEqual("1 2\n3 4\n5 6\n7 8\n9 0\n1 2\n3 4\n5 6\n7 8\n9 0", contents);
        }

        [TestMethod]
        public void TextWithLicenseTextAndNoPrefixAndNoWordWrap()
        {
            JavaFileContents contents = new JavaFileContents();
            const string originalText =
                "Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                "Licensed under the MIT License.See License.txt in the project root for license information.\n" +
                "\n" +
                "Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                "\n" +
                "Changes may cause incorrect behavior and will be lost if the code is regenerated.";
            contents.Text(originalText);

            JavaFileContentsAssert.AreEqual(originalText, contents);
        }

        [TestMethod]
        public void TextWithLicenseTextAndPrefixAndNoWordWrap()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.AddToPrefix(" * ");

            const string originalText =
                "Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                "Licensed under the MIT License.See License.txt in the project root for license information.\n" +
                "\n" +
                "Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                "\n" +
                "Changes may cause incorrect behavior and will be lost if the code is regenerated.";
            contents.Text(originalText);

            const string expectedText =
                " * Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                " * Licensed under the MIT License.See License.txt in the project root for license information.\n" +
                " * \n" +
                " * Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                " * \n" +
                " * Changes may cause incorrect behavior and will be lost if the code is regenerated.";
            JavaFileContentsAssert.AreEqual(expectedText, contents);
        }

        [TestMethod]
        public void TextWithLicenseTextAndNoPrefixAndWordWrap()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.SetWordWrapWidth(80);

            const string originalText =
                "Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                "Licensed under the MIT License.See License.txt in the project root for license information.\n" +
                "\n" +
                "Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                "\n" +
                "Changes may cause incorrect behavior and will be lost if the code is regenerated.";
            contents.Text(originalText);

            const string expectedText =
                "Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                "Licensed under the MIT License.See License.txt in the project root for license\n" +
                "information.\n" +
                "\n" +
                "Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                "\n" +
                "Changes may cause incorrect behavior and will be lost if the code is\n" +
                "regenerated.";
            JavaFileContentsAssert.AreEqual(expectedText, contents);
        }

        [TestMethod]
        public void TextWithLicenseTextAndPrefixAndWordWrap()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.AddToPrefix(" * ");
            contents.SetWordWrapWidth(80);

            const string originalText =
                "Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                "Licensed under the MIT License.See License.txt in the project root for license information.\n" +
                "\n" +
                "Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                "\n" +
                "Changes may cause incorrect behavior and will be lost if the code is regenerated.";
            contents.Text(originalText);

            const string expectedText =
                " * Copyright (c) Microsoft Corporation. All rights reserved.\n" +
                " * Licensed under the MIT License.See License.txt in the project root for\n" +
                " * license information.\n" +
                " * \n" +
                " * Code generated by Microsoft(R) AutoRest Code Generator.\n" +
                " * \n" +
                " * Changes may cause incorrect behavior and will be lost if the code is\n" +
                " * regenerated.";
            JavaFileContentsAssert.AreEqual(expectedText, contents);
        }

        [TestMethod]
        public void MultipleTextCalls()
        {
            JavaFileContents contents = new JavaFileContents();
            contents.AddToPrefix(" * ");

            contents.Text("ABC");
            JavaFileContentsAssert.AreEqual(" * ABC", contents);

            contents.Text("DEF");
            JavaFileContentsAssert.AreEqual(" * ABCDEF", contents);

            contents.Text("GHI");
            JavaFileContentsAssert.AreEqual(" * ABCDEFGHI", contents);

            contents.Line();
            JavaFileContentsAssert.AreEqual(" * ABCDEFGHI\r\n", contents);

            contents.Line();
            JavaFileContentsAssert.AreEqual(" * ABCDEFGHI\r\n * \r\n", contents);
        }

        [TestMethod]
        public void If()
        {
            JavaFileContents contents = new JavaFileContents();
            
            contents.If("apples", ifBlock =>
            {
                ifBlock.Line("// hello!");
            });

            const string expectedText =
                "if (apples) {\r\n" +
                "    // hello!\r\n" +
                "}";

            JavaFileContentsAssert.AreEqual(expectedText, contents);
        }
    }
}
