/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package fixtures.bodycomplex;

import com.microsoft.rest.v3.BodyResponse;
import com.microsoft.rest.v3.ServiceCallback;
import com.microsoft.rest.v3.ServiceFuture;
import com.microsoft.rest.v3.VoidResponse;
import fixtures.bodycomplex.models.ErrorException;
import fixtures.bodycomplex.models.Fish;
import reactor.core.publisher.Mono;
import reactor.util.annotation.NonNull;

/**
 * An instance of this class provides access to all the operations defined in
 * Polymorphicrecursives.
 */
public interface Polymorphicrecursives {
    /**
     * Get complex types that are polymorphic and have recursive references.
     *
     * @throws ErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Fish object if successful.
     */
    Fish getValid();

    /**
     * Get complex types that are polymorphic and have recursive references.
     *
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @return a ServiceFuture which will be completed with the result of the network request.
     */
    ServiceFuture<Fish> getValidAsync(ServiceCallback<Fish> serviceCallback);

    /**
     * Get complex types that are polymorphic and have recursive references.
     *
     * @return a Mono which performs the network request upon subscription.
     */
    Mono<BodyResponse<Fish>> getValidWithRestResponseAsync();

    /**
     * Get complex types that are polymorphic and have recursive references.
     *
     * @return a Mono which performs the network request upon subscription.
     */
    Mono<Fish> getValidAsync();

    /**
     * Put complex types that are polymorphic and have recursive references.
     *
     * @param complexBody Please put a salmon that looks like this:
     * {
     *     "fishtype": "salmon",
     *     "species": "king",
     *     "length": 1,
     *     "age": 1,
     *     "location": "alaska",
     *     "iswild": true,
     *     "siblings": [
     *         {
     *             "fishtype": "shark",
     *             "species": "predator",
     *             "length": 20,
     *             "age": 6,
     *             "siblings": [
     *                 {
     *                     "fishtype": "salmon",
     *                     "species": "coho",
     *                     "length": 2,
     *                     "age": 2,
     *                     "location": "atlantic",
     *                     "iswild": true,
     *                     "siblings": [
     *                         {
     *                             "fishtype": "shark",
     *                             "species": "predator",
     *                             "length": 20,
     *                             "age": 6
     *                         },
     *                         {
     *                             "fishtype": "sawshark",
     *                             "species": "dangerous",
     *                             "length": 10,
     *                             "age": 105
     *                         }
     *                     ]
     *                 },
     *                 {
     *                     "fishtype": "sawshark",
     *                     "species": "dangerous",
     *                     "length": 10,
     *                     "age": 105
     *                 }
     *             ]
     *         },
     *         {
     *             "fishtype": "sawshark",
     *             "species": "dangerous",
     *             "length": 10,
     *             "age": 105
     *         }
     *     ]
     * }.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void putValid(@NonNull Fish complexBody);

    /**
     * Put complex types that are polymorphic and have recursive references.
     *
     * @param complexBody Please put a salmon that looks like this:
     * {
     *     "fishtype": "salmon",
     *     "species": "king",
     *     "length": 1,
     *     "age": 1,
     *     "location": "alaska",
     *     "iswild": true,
     *     "siblings": [
     *         {
     *             "fishtype": "shark",
     *             "species": "predator",
     *             "length": 20,
     *             "age": 6,
     *             "siblings": [
     *                 {
     *                     "fishtype": "salmon",
     *                     "species": "coho",
     *                     "length": 2,
     *                     "age": 2,
     *                     "location": "atlantic",
     *                     "iswild": true,
     *                     "siblings": [
     *                         {
     *                             "fishtype": "shark",
     *                             "species": "predator",
     *                             "length": 20,
     *                             "age": 6
     *                         },
     *                         {
     *                             "fishtype": "sawshark",
     *                             "species": "dangerous",
     *                             "length": 10,
     *                             "age": 105
     *                         }
     *                     ]
     *                 },
     *                 {
     *                     "fishtype": "sawshark",
     *                     "species": "dangerous",
     *                     "length": 10,
     *                     "age": 105
     *                 }
     *             ]
     *         },
     *         {
     *             "fishtype": "sawshark",
     *             "species": "dangerous",
     *             "length": 10,
     *             "age": 105
     *         }
     *     ]
     * }.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @return a ServiceFuture which will be completed with the result of the network request.
     */
    ServiceFuture<Void> putValidAsync(@NonNull Fish complexBody, ServiceCallback<Void> serviceCallback);

    /**
     * Put complex types that are polymorphic and have recursive references.
     *
     * @param complexBody Please put a salmon that looks like this:
     * {
     *     "fishtype": "salmon",
     *     "species": "king",
     *     "length": 1,
     *     "age": 1,
     *     "location": "alaska",
     *     "iswild": true,
     *     "siblings": [
     *         {
     *             "fishtype": "shark",
     *             "species": "predator",
     *             "length": 20,
     *             "age": 6,
     *             "siblings": [
     *                 {
     *                     "fishtype": "salmon",
     *                     "species": "coho",
     *                     "length": 2,
     *                     "age": 2,
     *                     "location": "atlantic",
     *                     "iswild": true,
     *                     "siblings": [
     *                         {
     *                             "fishtype": "shark",
     *                             "species": "predator",
     *                             "length": 20,
     *                             "age": 6
     *                         },
     *                         {
     *                             "fishtype": "sawshark",
     *                             "species": "dangerous",
     *                             "length": 10,
     *                             "age": 105
     *                         }
     *                     ]
     *                 },
     *                 {
     *                     "fishtype": "sawshark",
     *                     "species": "dangerous",
     *                     "length": 10,
     *                     "age": 105
     *                 }
     *             ]
     *         },
     *         {
     *             "fishtype": "sawshark",
     *             "species": "dangerous",
     *             "length": 10,
     *             "age": 105
     *         }
     *     ]
     * }.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @return a Mono which performs the network request upon subscription.
     */
    Mono<VoidResponse> putValidWithRestResponseAsync(@NonNull Fish complexBody);

    /**
     * Put complex types that are polymorphic and have recursive references.
     *
     * @param complexBody Please put a salmon that looks like this:
     * {
     *     "fishtype": "salmon",
     *     "species": "king",
     *     "length": 1,
     *     "age": 1,
     *     "location": "alaska",
     *     "iswild": true,
     *     "siblings": [
     *         {
     *             "fishtype": "shark",
     *             "species": "predator",
     *             "length": 20,
     *             "age": 6,
     *             "siblings": [
     *                 {
     *                     "fishtype": "salmon",
     *                     "species": "coho",
     *                     "length": 2,
     *                     "age": 2,
     *                     "location": "atlantic",
     *                     "iswild": true,
     *                     "siblings": [
     *                         {
     *                             "fishtype": "shark",
     *                             "species": "predator",
     *                             "length": 20,
     *                             "age": 6
     *                         },
     *                         {
     *                             "fishtype": "sawshark",
     *                             "species": "dangerous",
     *                             "length": 10,
     *                             "age": 105
     *                         }
     *                     ]
     *                 },
     *                 {
     *                     "fishtype": "sawshark",
     *                     "species": "dangerous",
     *                     "length": 10,
     *                     "age": 105
     *                 }
     *             ]
     *         },
     *         {
     *             "fishtype": "sawshark",
     *             "species": "dangerous",
     *             "length": 10,
     *             "age": 105
     *         }
     *     ]
     * }.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @return a Mono which performs the network request upon subscription.
     */
    Mono<Void> putValidAsync(@NonNull Fish complexBody);
}
